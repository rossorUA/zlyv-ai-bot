import os
import time
import random
import json
import requests
from telebot import TeleBot
from datetime import datetime

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")
HISTORY_FILE = "post_history.json"
MAX_POSTS_PER_DAY = 30
POSTING_HOURS_START = 9
POSTING_HOURS_END = 21
EMOJIS = ["üî•", "ü§ñ", "üöÄ", "üí°", "‚ú®", "üòé", "üéâ", "ü¶æ", "üß†", "üì¢", "üåü", "üí•", "‚ö°Ô∏è", "üìà", "ü§©", "ü™Ñ"]
STATIC_THEMES = [
    "AI-–Ω–æ–≤–∏–Ω–∫–∏", "–Ω–µ–π—Ä–æ–º–µ—Ä–µ–∂–∞", "—ñ–Ω—Å–∞–π–¥–∏", "–Ω–æ–≤—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏", "Google", "GitHub", "—Ñ—ñ—à–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤",
    "—Å–≤—ñ–∂—ñ —Ä–µ–ª—ñ–∑–∏", "–ª–∞–π—Ñ—Ö–∞–∫–∏", "open-source", "ProductHunt", "Bun", "Deno", "Next.js", "Qwik", "Astro", "VS Code",
    "Copilot", "–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞", "—Ç—Ä–µ–Ω–¥–∏"
]

bot = TeleBot(TELEGRAM_BOT_TOKEN)

def load_history():
    if os.path.exists(HISTORY_FILE):
        with open(HISTORY_FILE, "r", encoding="utf-8") as f:
            return set(json.load(f))
    return set()

def save_history(history):
    with open(HISTORY_FILE, "w", encoding="utf-8") as f:
        json.dump(list(history), f, ensure_ascii=False)

def fetch_fresh_news():
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ HackerNews API —è–∫ –ø—Ä–∏–∫–ª–∞–¥ (–º–æ–∂–Ω–∞ –º—ñ–Ω—è—Ç–∏)
    try:
        res = requests.get("https://hn.algolia.com/api/v1/search_by_date?tags=story&hitsPerPage=50").json()
        return [hit['title'] + "\n" + hit['url'] for hit in res['hits']]
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω:", e)
        return []

def rewrite_human(text):
    # –î—É–∂–µ –ø—Ä–∏–º—ñ—Ç–∏–≤–Ω–∏–π –ø–µ—Ä–µ—Ñ—Ä–∞–∑ ‚Äî –º–æ–∂–Ω–∞ –∑–∞–º—ñ–Ω–∏—Ç–∏ —Å–≤–æ—ó–º
    phrases = [
        "–ê –æ—Å—å —ñ —Å–≤—ñ–∂–∞ –Ω–æ–≤–∏–Ω–∞ –¥–ª—è —Ç–µ–±–µ:", "–°–ª—É—Ö–∞–π —Ü–µ! ", "–¢—ñ–ª—å–∫–∏ –Ω–æ –≤–∏—Ä–∏–Ω—É–ª–æ:", "–°–ø—Ä–∞–≤–∂–Ω—è –±–æ–º–±–∞: ",
        "–í–ø–µ—Ä—à–µ —É —Ç–≤–æ—ó–π —Å—Ç—Ä—ñ—á—Ü—ñ:", "–ù–µ –ø—Ä–æ–≥–∞–≤! ", "–ü—Ä—è–º–æ –∑–∞—Ä–∞–∑:"
    ]
    return random.choice(phrases) + text

def send_post(text, with_image=False):
    # –î–æ–¥–∞—î–º–æ –µ–º–æ–¥–∑—ñ –π –ø—ñ–¥–ø–∏—Å
    emoji = random.choice(EMOJIS)
    post = f"{emoji} {text.strip()}\n@zlyv_ai"
    if with_image:
        # –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫—É + –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫ (–ø—Ä–æ—Å—Ç–∏–π —Å–ø–æ—Å—ñ–± ‚Äì —Ç—É—Ç –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ URL –∞–±–æ —Å–≤–æ—î PNG –∑ –ª–æ–≥–æ—Ç–∏–ø–æ–º)
        # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏ ‚Äî —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ DALL¬∑E –∞–±–æ –±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π placeholder
        photo_url = "https://placehold.co/600x400.png?text=ZLYV+AI"
        try:
            bot.send_photo(TELEGRAM_CHANNEL_ID, photo_url, caption=post)
        except Exception as e:
            print("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:", e)
    else:
        try:
            bot.send_message(TELEGRAM_CHANNEL_ID, post)
        except Exception as e:
            print("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", e)

def main():
    print("–ë–æ—Ç —Å—Ç–∞—Ä—Ç—É–≤–∞–≤!")
    history = load_history()
    posts_today = 0
    last_post_time = None

    while True:
        now = datetime.now()
        hour = now.hour

        # –í—ñ–¥ 9:00 –¥–æ 21:00 —ñ –º–∞–∫—Å–∏–º—É–º 30 –ø–æ—Å—Ç—ñ–≤
        if hour >= POSTING_HOURS_START and hour <= POSTING_HOURS_END and posts_today < MAX_POSTS_PER_DAY:
            fresh_news = fetch_fresh_news()
            random.shuffle(fresh_news)
            found = False

            for raw_news in fresh_news:
                news_id = raw_news[:100]  # –î–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ ‚Äî –ø–µ—Ä—à—ñ 100 —Å–∏–º–≤–æ–ª—ñ–≤
                if news_id not in history:
                    # –°–≥–µ–Ω–µ—Ä—É–π –ø–æ—Å—Ç —É —Å—Ç–∏–ª—ñ "–∂–∏–≤–æ—ó" –ª—é–¥–∏–Ω–∏
                    theme = random.choice(STATIC_THEMES)
                    text = rewrite_human(raw_news)
                    # –¢—Ä–∏–º–∞–π—Å—è –≤ –º–µ–∂–∞—Ö 200-250 —Å–∏–º–≤–æ–ª—ñ–≤:
                    text = text[:240] + "‚Ä¶" if len(text) > 250 else text
                    # Emoji —ñ –ø—ñ–¥–ø–∏—Å –¥–æ–¥–∞—é—Ç—å—Å—è —É send_post

                    # 1 –∑ 8 ‚Äî –∑ –∫–∞—Ä—Ç–∏–Ω–∫–æ—é
                    with_image = (posts_today % random.randint(6, 9) == 0)
                    send_post(f"#{theme}\n{text}", with_image=with_image)
                    print(f"–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç: {text}")
                    history.add(news_id)
                    save_history(history)
                    posts_today += 1
                    found = True
                    break

            if not found:
                print("–ù–æ–≤–∏—Ö –Ω–æ–≤–∏–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            
            # –ß–∞—Å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ ‚Äî —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ñ–¥ 10 –¥–æ 60 —Ö–≤–∏–ª–∏–Ω
            sleep_min = random.randint(10, 60)
            print(f"–ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ—Å—Ç–æ–º: {sleep_min} —Ö–≤.")
            time.sleep(sleep_min * 60)
        else:
            # –°–ø–∏–º–æ 10 —Ö–≤ —è–∫—â–æ –Ω—ñ—á –∞–±–æ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç
            time.sleep(600)
            if hour == 0:
                posts_today = 0  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ–º—ñ—Ç—É –æ–ø—ñ–≤–Ω–æ—á—ñ

if __name__ == "__main__":
    main()
