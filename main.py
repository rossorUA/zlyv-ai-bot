from keep_alive import keep_alive
keep_alive()
import os
import time
import random
import json
import requests
import datetime
import openai
from telebot import TeleBot

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHANNEL_ID = os.getenv('TELEGRAM_CHANNEL_ID')
HISTORY_FILE = "post_history.json"
MAX_POSTS_PER_DAY = 30
POSTING_HOURS_START = 9
POSTING_HOURS_END = 21

client = openai.OpenAI()
bot = TeleBot(TELEGRAM_BOT_TOKEN)

EMOJIS = ["üî•", "üí°", "üöÄ", "ü§ñ", "‚ú®", "‚ö°", "ü¶æ", "üß†", "üíª", "ü¶Ñ", "üéâ"]
STATIC_THEMES = [
    "AI-–Ω–æ–≤–∏–Ω–∫–∏", "—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏", "—ñ–Ω—Å–∞–π–¥–∏", "–Ω–æ–≤—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏", "Google", "GitHub", "–ª–∞–π—Ñ—Ö–∞–∫–∏", "open-source",
    "ProductHunt", "Bun", "Deno", "Next.js", "Qwik", "Astro", "VS Code", "Copilot", "–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞", "—Ç—Ä–µ–Ω–¥–∏"
]

def load_history():
    if os.path.exists(HISTORY_FILE):
        with open(HISTORY_FILE, "r", encoding="utf-8") as f:
            return set(json.load(f))
    return set()

def save_history(history):
    with open(HISTORY_FILE, "w", encoding="utf-8") as f:
        json.dump(list(history), f, ensure_ascii=False)

def random_delay_times(n, start_hour, end_hour):
    # –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –∑–∞—Ç—Ä–∏–º–æ–∫ (—É —Ö–≤–∏–ª–∏–Ω–∞—Ö) –º—ñ–∂ –ø–æ—Å—Ç–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º –¥–Ω—è –≤ –¥–æ–≤—ñ–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
    total_minutes = (end_hour - start_hour) * 60
    points = sorted(random.sample(range(1, total_minutes), n-1))
    times = [points[0]] + [points[i]-points[i-1] for i in range(1, len(points))] + [total_minutes - points[-1]]
    return [int(t) for t in times]

def generate_post(history):
    prompt = (
        f"–ó–≥–µ–Ω–µ—Ä—É–π —É–Ω—ñ–∫–∞–ª—å–Ω—É –∞–≤—Ç–æ—Ä—Å—å–∫—É –Ω–æ–≤–∏–Ω—É –¥–ª—è Telegram-–∫–∞–Ω–∞–ª—É –ø—Ä–æ IT, AI, –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, "
        f"—è–∫—É —â–µ –Ω–µ –±—É–ª–æ —Ä–∞–Ω—ñ—à–µ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç–∏–ª—å: —è –∞–≤—Ç–æ—Ä, –ø–∏—à–∏ –∑ –∞–±–∑–∞—Ü–∞–º–∏, –≤—Å—Ç–∞–≤–ª—è–π —Å–º–∞–π–ª–∏ —Ç–∏–ø—É {random.choice(EMOJIS)}, "
        f"—Ç–µ–º–∞—Ç–∏–∫–∞: {random.choice(STATIC_THEMES)}. –ú–æ–≤–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞. –ú—ñ–Ω—ñ–º—É–º 350 —Å–∏–º–≤–æ–ª—ñ–≤. "
        f"–ù–µ –∫–æ–ø—ñ—é–π —ñ—Å–Ω—É—é—á–µ –∑ –º–µ—Ä–µ–∂—ñ. –ü–æ—Å—Ç –∑–∞–∫—ñ–Ω—á—É–π –ø—ñ–¥–ø–∏—Å–æ–º –±–µ–∑ –ø—Ä–æ–±—ñ–ª—É: @zlyv_ai."
    )
    try:
        resp = client.chat.completions.create(
            model="gpt-3.5-turbo",  # –∞–±–æ gpt-4o, —è–∫—â–æ —î –¥–æ—Å—Ç—É–ø —ñ –æ–ø–ª–∞—Ç–∞!
            messages=[{"role": "user", "content": prompt}],
            max_tokens=400,
            temperature=0.9,
        )
        post = resp.choices[0].message.content.strip()
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É —Ç–∞ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å
        if len(post) < 350 or post in history:
            return None
        return post
    except Exception as e:
        print(f"‚ùå OpenAI error: {e}")
        return None

def generate_image(post):
    # –Ø–∫—â–æ —Ö–æ—á–µ—à, –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∑ DALL-E, –∞–±–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ None
    return None

def post_to_telegram(post, image_url=None):
    try:
        if image_url:
            bot.send_photo(TELEGRAM_CHANNEL_ID, image_url, caption=post)
        else:
            bot.send_message(TELEGRAM_CHANNEL_ID, post)
        print("‚úÖ –ü–æ—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ Telegram!")
    except Exception as e:
        print(f"‚ùó Telegram error: {e}")

def main():
    history = load_history()
    posting_times = random_delay_times(MAX_POSTS_PER_DAY, POSTING_HOURS_START, POSTING_HOURS_END)
    print("üïí –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:", posting_times)
    for idx, delay in enumerate(posting_times):
        post = None
        attempts = 0
        # –ü—Ä–æ–±—É—î–º–æ 3 —Ä–∞–∑–∏ –æ—Ç—Ä–∏–º–∞—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –ø–æ—Å—Ç
        while not post and attempts < 3:
            post = generate_post(history)
            attempts += 1
        if not post:
            print(f"‚ùó [{idx+1}] –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–æ—Å—Ç, —Å–∫–∏–ø–∞—î–º–æ.")
        else:
            image_url = generate_image(post) if random.random() < 0.3 else None
            post_to_telegram(post, image_url)
            history.add(post)
            save_history(history)
            print(f"‚úÖ [{datetime.datetime.now().strftime('%H:%M:%S')}] –ü–æ—Å—Ç {idx+1}/{MAX_POSTS_PER_DAY} –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!")
        if idx < len(posting_times)-1:
            print(f"–ù–∞—Å—Ç—É–ø–Ω–∏–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ {delay} —Ö–≤–∏–ª–∏–Ω.")
            time.sleep(delay * 60)

if __name__ == "__main__":
    while True:
        main()
        # –ù–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ main() –∑ –Ω–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
        print("–î–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ß–µ–∫–∞—é –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç—É.")
        time.sleep(60 * 60 * 3)  # —á–µ–∫–∞—Ç–∏ 3 –≥–æ–¥–∏–Ω–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –¥–æ–±–∏
